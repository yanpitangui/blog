<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>api on Yan Pitangui</title><link>https://yanpitangui.com/pt/tags/api/</link><description>Recent content in api on Yan Pitangui</description><generator>Hugo -- gohugo.io</generator><language>pt</language><copyright>© Yan Pitangui</copyright><lastBuildDate>Thu, 15 Jun 2023 00:52:58 -0300</lastBuildDate><atom:link href="https://yanpitangui.com/pt/tags/api/index.xml" rel="self" type="application/rss+xml"/><item><title>Detectando se a aplicação está rodando para criar migrations</title><link>https://yanpitangui.com/pt/posts/2023/06/detectando-se-a-aplica%C3%A7%C3%A3o-est%C3%A1-rodando-para-criar-migrations/</link><pubDate>Thu, 15 Jun 2023 00:52:58 -0300</pubDate><guid>https://yanpitangui.com/pt/posts/2023/06/detectando-se-a-aplica%C3%A7%C3%A3o-est%C3%A1-rodando-para-criar-migrations/</guid><description>Problema: Seu DbContext tem uma dependência scoped Tendo uma dependência scoped, como por exemplo numa aplicação multi tenant, onde injeta algum serviço scoped, como TenantProvider ou algo do tipo, você ficará impossibilitado(a) de criar migrations, pois a aplicação não conseguirá resolver essa dependência. Mas eu tenho a solução!
Veja a classe a seguir como exemplo:
public class Session: ISession { public Session(IHttpContextAccessor httpContextAccessor) {...} } Solução Uma coisa que pode ser feita é adicionar mais um construtor, onde você adiciona manualmente as dependências, como a seguir:</description></item><item><title>Iniciando uma api em .NET rapidamente com um boilerplate</title><link>https://yanpitangui.com/pt/posts/2023/05/iniciando-uma-api-em-.net-rapidamente-com-um-boilerplate/</link><pubDate>Wed, 10 May 2023 21:56:13 -0300</pubDate><guid>https://yanpitangui.com/pt/posts/2023/05/iniciando-uma-api-em-.net-rapidamente-com-um-boilerplate/</guid><description>O que é um boilerplate de API? Um boilerplate de API é um modelo pré-construído que fornece uma estrutura básica e um conjunto de funcionalidades para criar uma API da Web. Ele inclui componentes essenciais, como roteamento, integração de banco de dados, tratamento de erros e recursos de segurança que geralmente são necessários na maioria dos projetos de API.
Por que você deveria se preocupar com isso? O uso de um boilerplate de API pode acelerar significativamente o processo de desenvolvimento inicial por vários motivos:</description></item></channel></rss>