<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>delete on Yan Pitangui</title><link>https://yanpitangui.com/pt/tags/delete/</link><description>Recent content in delete on Yan Pitangui</description><generator>Hugo -- gohugo.io</generator><language>pt</language><copyright>© Yan Pitangui</copyright><lastBuildDate>Thu, 15 Jun 2023 15:35:58 -0300</lastBuildDate><atom:link href="https://yanpitangui.com/pt/tags/delete/index.xml" rel="self" type="application/rss+xml"/><item><title>Deletando chaves do redis por pattern no dotnet</title><link>https://yanpitangui.com/pt/posts/2023/06/deletando-chaves-do-redis-por-pattern-no-dotnet/</link><pubDate>Thu, 15 Jun 2023 15:35:58 -0300</pubDate><guid>https://yanpitangui.com/pt/posts/2023/06/deletando-chaves-do-redis-por-pattern-no-dotnet/</guid><description>Problema: Você quer deletar mais de uma chave de uma vez, provavelmente por um padrão regex Utilizando Redis, você deve estar utilizando algo como o seguinte para deletar chaves:
public class CacheManager { private readonly IDistributedCache _cache; public CacheManager(IDistributedCache cache) { _cache = cache; } public async Task RemoveKeys() { await Cache.RemoveAsync(&amp;#34;chave-1&amp;#34;); await Cache.RemoveAsync(&amp;#34;chave-2&amp;#34;); await Cache.RemoveAsync(&amp;#34;chave-3&amp;#34;); } } O único problema dessa abordagem é que realizamos um round-trip para cada deleção de chave, ou seja, chamamos o servidor redis a cada deleção.</description></item></channel></rss>